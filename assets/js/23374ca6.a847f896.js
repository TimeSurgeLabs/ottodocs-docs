"use strict";(self.webpackChunkottodocs_docs=self.webpackChunkottodocs_docs||[]).push([[421],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),u=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,h=p["".concat(i,".").concat(m)]||p[m]||d[m]||r;return n?o.createElement(h,l(l({ref:t},c),{},{components:n})):o.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:a,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6527:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var o=n(7462),a=(n(7294),n(3905));const r={},l="What is OttoDocs?",s={unversionedId:"README",id:"README",title:"What is OttoDocs?",description:"Ottodocs is a command-line tool built in Go that utilizes OpenAI's ChatGPT API to generate commit messages, pull requests, answers to questions, and even shell commands based on input prompts and code context. It helps developers automate various parts of their development workflow using AI. The tool requires an OpenAI API key to function.",source:"@site/docs/README.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/TimeSurgeLabs/ottodocs/tree/docs/packages/create-docusaurus/templates/shared/docs/README.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",next:{title:"Base",permalink:"/docs/usage/otto"}},i={},u=[{value:"Installation",id:"installation",level:2},{value:"Installing Precompiled Binaries",id:"installing-precompiled-binaries",level:3},{value:"Building From Source",id:"building-from-source",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Usage",id:"usage",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-is-ottodocs"},"What is OttoDocs?"),(0,a.kt)("p",null,"Ottodocs is a command-line tool built in Go that utilizes OpenAI's ChatGPT API to generate commit messages, pull requests, answers to questions, and even shell commands based on input prompts and code context. It helps developers automate various parts of their development workflow using AI. The tool requires an ",(0,a.kt)("a",{parentName:"p",href:"https://platform.openai.com/account/api-keys"},"OpenAI API key")," to function."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"There are two methods to install OttoDocs:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Precompiled binaries:")," Download the precompiled binaries from the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/TimeSurgeLabs/ottodocs/releases"},"GitHub releases tab"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Build from source:")," Clone the repo and build the binary by running the following commands:")),(0,a.kt)("h3",{id:"installing-precompiled-binaries"},"Installing Precompiled Binaries"),(0,a.kt)("p",null,"Simply download the binary for your platform from the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/TimeSurgeLabs/ottodocs/releases"},"GitHub releases tab")," and place it in your ",(0,a.kt)("inlineCode",{parentName:"p"},"$PATH")," ."),(0,a.kt)("h3",{id:"building-from-source"},"Building From Source"),(0,a.kt)("p",null,"OttoDocs utilizes the ",(0,a.kt)("inlineCode",{parentName:"p"},"just")," command runner for building and running tasks, making maintaining the project easier. If you do not have ",(0,a.kt)("inlineCode",{parentName:"p"},"just")," installed, see ",(0,a.kt)("a",{parentName:"p",href:"https://just.systems/man/en/chapter_5.html"},"here")," for installation methods."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/TimeSurgeLabs/ottodocs.git\ncd ottodocs\njust build # will build to bin/otto\n# or\njust install # will build & copy to $GOPATH/bin. \n")),(0,a.kt)("p",null,"If you want to build for all supported platforms, you can run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"just crossbuild\n")),(0,a.kt)("p",null,"This will build and compress binaries for all supported platforms and place them in the ",(0,a.kt)("inlineCode",{parentName:"p"},"dist")," directory."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"First, you need to create an OpenAI API Key. If you do not already have an OpenAI account, you can create a new one and get some free credits to try it out. Once you have an account, you can create an API key by going to the ",(0,a.kt)("a",{parentName:"p",href:"https://platform.openai.com/account/api-keys"},"API Keys tab")," in your account settings."),(0,a.kt)("p",null,"Once you have an API key, you can log in to ottodocs by running the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"otto config --apikey $OPENAI_API_KEY\n")),(0,a.kt)("p",null,"You can set the model to use by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"otto config --model $MODEL_NAME\n")),(0,a.kt)("p",null,"You can add a GitHub Personal Access Token for opening PRs by running:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"otto config --token $GITHUB_TOKEN\n")),(0,a.kt)("p",null,"Make sure that your access token has the ",(0,a.kt)("inlineCode",{parentName:"p"},"repo")," scope."),(0,a.kt)("p",null,"Once that is complete, you can start generating documentation by running the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"otto docs <path to repo or file>\n")),(0,a.kt)("p",null,"Or for a single file, you can run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"otto doc -f <path to file>\n")),(0,a.kt)("p",null,"Ask a question about a repo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'otto ask . -q "What does LoadFile do differently than ReadFile?"\n')),(0,a.kt)("p",null,"Generate a commit message:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"otto commit # optionally add --push to push to remote\n")),(0,a.kt)("p",null,"Generate a pull request:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# make sure you are creating the PR on the correct base branch\notto pr -b main # optionally add --publish to publish the Pull Request\n")),(0,a.kt)("p",null,"Ask it about commands:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'otto cmd -q "what is the command to add a remote?"\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"For detailed usage instructions, please refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://ottodocs.chand1012.dev/docs/usage/otto"},"documentation"),"."))}d.isMDXComponent=!0}}]);