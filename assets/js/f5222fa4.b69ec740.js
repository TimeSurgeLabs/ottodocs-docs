"use strict";(self.webpackChunkottodocs_docs=self.webpackChunkottodocs_docs||[]).push([[169],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>f});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var u=r.createContext({}),p=function(e){var t=r.useContext(u),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,s=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),l=p(o),m=n,f=l["".concat(u,".").concat(m)]||l[m]||d[m]||s;return o?r.createElement(f,a(a({ref:t},c),{},{components:o})):r.createElement(f,a({ref:t},c))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=o.length,a=new Array(s);a[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[l]="string"==typeof e?e:n,a[1]=i;for(var p=2;p<s;p++)a[p]=o[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},7026:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=o(7462),n=(o(7294),o(3905));const s={title:"Issue",description:"Get a prompt for or ask Otto about a GitHub Issue."},a=void 0,i={unversionedId:"usage/otto_issue",id:"usage/otto_issue",title:"Issue",description:"Get a prompt for or ask Otto about a GitHub Issue.",source:"@site/docs/usage/otto_issue.md",sourceDirName:"usage",slug:"/usage/otto_issue",permalink:"/docs/usage/otto_issue",draft:!1,editUrl:"https://github.com/TimeSurgeLabs/ottodocs/tree/docs/packages/create-docusaurus/templates/shared/docs/usage/otto_issue.md",tags:[],version:"current",frontMatter:{title:"Issue",description:"Get a prompt for or ask Otto about a GitHub Issue."},sidebar:"docs",previous:{title:"Edit",permalink:"/docs/usage/otto_edit"},next:{title:"Pull Request",permalink:"/docs/usage/otto_pr"}},u={},p=[{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 1-May-2023",id:"auto-generated-by-spf13cobra-on-1-may-2023",level:6}],c={toc:p},l="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(l,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Get a prompt for or ask Otto about a GitHub Issue."),(0,n.kt)("h3",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Get a prompt for or ask Otto about a GitHub Issue. Uses the current working directory's repo by default."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"otto issue [flags]\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  -c, --comments          use comments instead of git repo for context\n      --count             count the number of tokens\n  -h, --help              help for issue\n  -n, --number int        the number of the issue to get\n  -p, --prompt-only       only generate a prompt, don't ask Otto\n  -q, --question string   the question to ask Otto\n  -v, --verbose           verbose output\n")),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"  -V, --version   print version\n")),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/usage/otto"},"otto"),"\t - Document your code with ease")),(0,n.kt)("h6",{id:"auto-generated-by-spf13cobra-on-1-may-2023"},"Auto generated by spf13/cobra on 1-May-2023"))}d.isMDXComponent=!0}}]);